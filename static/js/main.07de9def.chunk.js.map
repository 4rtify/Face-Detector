{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/brain.png","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/SignIn/SignIn.js","components/Register/Register.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","onClick","className","Logo","style","display","height","width","src","brain","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Rank","userName","userEntries","FaceRecognition","imageUrl","box","id","alt","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","toLowerCase","password","res","json","user","loadUser","this","htmlFor","name","href","React","Component","Register","onNameChange","App","data","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","input","data_model","model","data_count","count","Object","assign","console","log","route","then","response","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.07de9def.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navigation.css'\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n    if (isSignedIn) {\r\n        return (\r\n            <nav>\r\n                <p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n            </nav>\r\n        )\r\n    } else {\r\n        return (\r\n            <nav>\r\n                <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n                <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/brain.2730066f.png\";","import React from 'react';\r\nimport Tilt from 'react-parallax-tilt';\r\nimport brain from './brain.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className='ma4 mt0'>\r\n            <Tilt className='Logo Tilt br2 shadow-2' style={{display: 'flex', height: '150px', width: '150px'}}>\r\n                <div>\r\n                    <img src={brain}/>\r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) => {\r\n    return (\r\n        <div>\r\n            <p className = 'f3'>\r\n                {'This Magic Brain will detect faces in pictures. Give it a Go!!'}\r\n            </p>\r\n            <div className='center'>\r\n                <div className='form center pa4 br3 shadow-5'>\r\n                    <input className='f4 pa2 w-70 center' type=\"text\" onChange={onInputChange} />\r\n                    <button \r\n                        className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\r\n                        onClick={onButtonSubmit}\r\n                    >Dectect</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank = ({ userName, userEntries}) => {\r\n    return (\r\n        <>\r\n            <div className='white f3'>\r\n                {`${userName}, current rank is....`}\r\n            </div>\r\n            <div className='white f1'>\r\n                {userEntries}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Rank; ","import React from 'react';\r\nimport './FaceRecognition.css'\r\n\r\nconst FaceRecognition = ({imageUrl, box}) => {\r\n    return (\r\n        <div className='center ma'>\r\n            <div className='absolute mt2'>\r\n            <img id='inputImage' src={imageUrl} alt=\"\" width='500px' height='auto'/>\r\n            <div className='box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol }}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signInEmail: '',\r\n            signInPassword: ''\r\n        }\r\n    }\r\n    \r\n    \r\n    onEmailChange = (event) => {\r\n        this.setState({signInEmail: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({signInPassword: event.target.value})\r\n    }\r\n\r\n    onSubmitSignIn = async () => {\r\n        const res = await fetch('https://guarded-fjord-53732.herokuapp.com/signin', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail.toLowerCase(),\r\n                password: this.state.signInPassword\r\n            })    \r\n        });\r\n\r\n        const user = await res.json();\r\n\r\n        if (user.id) {\r\n            this.props.loadUser(user);\r\n            this.props.onRouteChange('main');\r\n        }\r\n            // .then(res => res.json())\r\n            // .then(data => {\r\n            //     if (data.id){\r\n            //         this.props.loadUser(data);\r\n            //         this.props.onRouteChange('main');\r\n            //     }\r\n            // })\r\n        \r\n    }\r\n    \r\n    render() {\r\n        const { onRouteChange } = this.props;\r\n        return (\r\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input \r\n                                    onChange={this.onEmailChange} \r\n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                    type=\"email\" \r\n                                    name=\"email-address\" \r\n                                    id=\"email-address\" \r\n                                />\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input \r\n                                    onChange={this.onPasswordChange}\r\n                                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                    type=\"password\" \r\n                                    name=\"password\" \r\n                                    id=\"password\" \r\n                                />\r\n                            </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input\r\n                            onClick={this.onSubmitSignIn} \r\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                            type=\"submit\" \r\n                            value=\"Sign in\" />\r\n                        </div>\r\n                        <div className=\"lh-copy mt3\">\r\n                            <p onClick={() => onRouteChange('register')} href=\"#0\" className=\"f6 link dim black db pointer\">Register</p>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        );\r\n    }  \r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            name: ''\r\n        }\r\n    }\r\n    \r\n    onNameChange = (event) => {\r\n        this.setState({name: event.target.value})\r\n    }\r\n    \r\n    onEmailChange = (event) => {\r\n        this.setState({email: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({password: event.target.value})\r\n    }\r\n\r\n    onSubmitSignIn = async () => {\r\n        const res = await fetch('https://guarded-fjord-53732.herokuapp.com/register', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.email.toLowerCase(),\r\n                password: this.state.password,\r\n                name: this.state.name\r\n            })    \r\n        });\r\n\r\n        const user = await res.json();\r\n\r\n        if (user.id) {\r\n            this.props.loadUser(user);\r\n            this.props.onRouteChange('main');\r\n        }\r\n            // .then(res => res.json())\r\n            // .then(user => {\r\n            //     if (user){\r\n            //         this.props.loadUser(user);\r\n            //         this.props.onRouteChange('main');\r\n            //     }\r\n            // })\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { onRouteChange } = this.props;\r\n        return (\r\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                                <input\r\n                                    onChange={this.onNameChange} \r\n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                    type=\"text\" \r\n                                    name=\"name\" \r\n                                    id=\"name\"\r\n                                 />\r\n                            </div>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input\r\n                                    onChange={this.onEmailChange} \r\n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                    type=\"email\" \r\n                                    name=\"email-address\" \r\n                                    id=\"email-address\" \r\n                                />\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input\r\n                                    onChange={this.onPasswordChange} \r\n                                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                    type=\"password\" \r\n                                    name=\"password\" \r\n                                    id=\"password\" \r\n                                />\r\n                            </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input\r\n                                onClick={this.onSubmitSignIn}\r\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                                type=\"submit\"\r\n                                value=\"Register\" />\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\r\nimport Navigation from '../components/Navigation/Navigation';\r\nimport Logo from '../components/Logo/Logo';\r\nimport ImageLinkForm from '../components/ImageLinkForm/ImageLinkForm'\r\nimport Rank from '../components/Rank/Rank';\r\nimport FaceRecognition from '../components/FaceRecognition/FaceRecognition';\r\nimport SignIn from '../components/SignIn/SignIn';\r\nimport './App.css';\r\nimport Register from '../components/Register/Register';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            input: '',\r\n            imageUrl: '',\r\n            box: {},\r\n            route: 'signin',\r\n            isSignedIn: false,\r\n            user: {\r\n                id: '',\r\n                name: '',\r\n                email: '',\r\n                entries: 0,\r\n                joined: ''\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    loadUser = (data) => {\r\n        this.setState({\r\n            user: {\r\n                id: data.id,\r\n                name: data.name,\r\n                email: data.email,\r\n                entries: data.entries,\r\n                joined: data.joined\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://guarded-fjord-53732.herokuapp.com/')\r\n            .then(response => response.json())\r\n            .then(console.log)\r\n    }\r\n\r\n    calculateFaceLocation = (data) => {\r\n        const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n        const image = document.getElementById('inputImage');\r\n        const width = Number(image.width);\r\n        const height = Number(image.height);\r\n        return {\r\n            leftCol: clarifaiFace.left_col * width,\r\n            topRow: clarifaiFace.top_row * height,\r\n            rightCol: width - (clarifaiFace.right_col * width),\r\n            bottomRow: height - (clarifaiFace.bottom_row * height),\r\n        }\r\n    }\r\n\r\n    displayFaceBox = (box) => {\r\n        this.setState({ box: box });\r\n    }\r\n\r\n    onInputChange = (event) => {\r\n        this.setState({ input: event.target.value });\r\n    }\r\n\r\n    onButtonSubmit = async () => {\r\n        this.setState({ imageUrl: this.state.input })\r\n\r\n        try {\r\n            const data_model = await fetch('https://guarded-fjord-53732.herokuapp.com/imageurl', {\r\n                method: 'post',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    input: this.state.input\r\n                })\r\n            });\r\n\r\n            const model = await data_model.json()\r\n\r\n            this.displayFaceBox(this.calculateFaceLocation(model));\r\n\r\n            const data_count = await fetch('https://guarded-fjord-53732.herokuapp.com/image', {\r\n                method: 'put',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    id: this.state.user.id\r\n                })\r\n            });\r\n\r\n            const count = await data_count.json()\r\n            this.setState(Object.assign(this.state.user, { entries: count }));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        // app.models.predict(\r\n        //     Clarifai.FACE_DETECT_MODEL,\r\n        //     this.state.input)\r\n        //     .then(response => {\r\n        //         if(response){\r\n        //             fetch('http://localhost:3000/image', {\r\n        //                 method: 'put',\r\n        //                 headers: {'Content-Type': 'application/json'},\r\n        //                 body: JSON.stringify({\r\n        //                     id: this.state.user.id\r\n        //                 })\r\n        //             })\r\n        //                 .then(response => response.json())\r\n        //                 .then(count => {\r\n        //                     this.setState(Object.assign(this.state.user, { entries: count}))\r\n        //                 })\r\n        //         }\r\n        //         this.displayFaceBox(this.calculateFaceLocation(response))\r\n        //     })\r\n        //     .catch(err => console.log(err));\r\n    }\r\n\r\n    onRouteChange = (route) => {\r\n        if (route === 'signout') {\r\n            this.setState({ isSignedIn: false })\r\n            this.setState({ imageUrl: ''})\r\n        } else if (route === 'main') {\r\n            this.setState({ isSignedIn: true })\r\n        }\r\n        this.setState({ route: route })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navigation onRouteChange={this.onRouteChange} isSignedIn={this.state.isSignedIn} />\r\n                <Logo />\r\n                {this.state.route === 'main'\r\n                    ? <>\r\n                        <Rank userName={this.state.user.name} userEntries={this.state.user.entries} />\r\n                        <ImageLinkForm\r\n\r\n                            onInputChange={this.onInputChange}\r\n                            onButtonSubmit={this.onButtonSubmit}\r\n\r\n                        />\r\n                        <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl} />\r\n                    </>\r\n                    : (\r\n                        this.state.route === 'signin'\r\n                            ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\r\n                            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}